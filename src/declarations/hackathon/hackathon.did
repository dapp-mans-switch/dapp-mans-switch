type Staker = 
 record {
   amount: nat;
   days: nat;
   name: text;
 };
type Secret = 
 record {
   author_id: nat;
   expiry_time: int;
   heartbeat_freq: int;
   key_holders: vec nat;
   keys: vec nat;
   last_heartbeat: int;
   payload: text;
   revealed: vec bool;
   reward: nat;
   secret_id: nat;
   valid: bool;
 };
type Counter = 
 service {
   getCount: () -> (nat) query;
   updateCount: (nat) -> (bool);
 };
service : {
  addSecret: (text, nat, int, int, vec nat, vec nat) -> (nat);
  addStaker: (text, nat, nat) -> (nat);
  editStaker: (nat, text, nat, nat) -> (bool);
  getCounter: (nat) -> (Counter);
  greet: (text) -> (text);
  listAllStakers: () -> (vec Staker) query;
  lookupSecret: (nat) -> (opt Secret) query;
  lookupStaker: (nat) -> (opt Staker) query;
  removeStaker: (nat) -> (bool);
  revealKey: (nat, nat, nat) -> (bool);
  sendHearbeat: (nat, nat) -> (bool);
  sharedGreet: (text) -> (text);
  shouldReveal: (nat) -> (bool) query;
}
